
        # enable ngx_pagespeed
        pagespeed on;
        pagespeed MessageBufferSize 100000;
        pagespeed FileCachePath /var/ngx_pagespeed_cache;
        pagespeed FileCacheSizeKb            102400;
        pagespeed FileCacheCleanIntervalMs   3600000;
        pagespeed FileCacheInodeLimit        500000;
        pagespeed FileCacheCleanIntervalMs -1;
        pagespeed LRUCacheKbPerProcess     1024;
        pagespeed LRUCacheByteLimit        8192;
        pagespeed DownstreamCachePurgeLocationPrefix http://localhost:80;
        pagespeed DownstreamCacheRebeaconingKey "abe02e86-1f0d-420a-80f4-0c4d4add2d94";
        pagespeed DownstreamCacheRewrittenPercentageThreshold 80;
        pagespeed ProcessScriptVariables on;
        pagespeed UseNativeFetcher on;

        resolver 8.8.8.8;

        pagespeed CreateSharedMemoryMetadataCache "/var/ngx_pagepspeed_cache/" 51200;
        pagespeed DefaultSharedMemoryCacheKB 50000;
        pagespeed ShmMetadataCacheCheckpointIntervalSec 300;
        pagespeed FetchWithGzip on;
        pagespeed InPlaceResourceOptimization on;
        pagespeed InPlaceSMaxAgeSec 10;
        pagespeed EnableFilters in_place_optimize_for_browser;
        pagespeed RateLimitBackgroundFetches off;
        pagespeed HttpCacheCompressionLevel 9;
        pagespeed ClearInheritedScripts;

        # let's speed up PageSpeed by storing it in the super duper fast memcached
        pagespeed MemcachedThreads 1;
        pagespeed MemcachedServers "localhost:11211";
        pagespeed MemcachedTimeoutUs 1000000;
        pagespeed EnableCachePurge on;
        pagespeed CacheFragment some_token;
        # disable CoreFilters
        pagespeed RewriteLevel PassThrough;

        # enable collapse whitespace filter
        pagespeed EnableFilters collapse_whitespace;

        # enable JavaScript library offload
        pagespeed EnableFilters canonicalize_javascript_libraries;

        # combine multiple CSS files into one
        pagespeed EnableFilters combine_css;

        # combine multiple JavaScript files into one
        pagespeed EnableFilters combine_javascript;

        # remove tags with default attributes
        pagespeed EnableFilters elide_attributes;

        # improve resource cacheability
        pagespeed EnableFilters extend_cache;

        # flatten CSS files by replacing @import with the imported file
        pagespeed EnableFilters flatten_css_imports;
        pagespeed CssFlattenMaxBytes 5120;

        # defer the loading of images which are not visible to the client
        pagespeed EnableFilters lazyload_images;

        # enable JavaScript minification
        pagespeed EnableFilters rewrite_javascript;

        # enable image optimization
        pagespeed EnableFilters rewrite_images;

        # pre-solve DNS lookup
        pagespeed EnableFilters insert_dns_prefetch;

        # rewrite CSS to load page-rendering CSS rules first.
        pagespeed EnableFilters prioritize_critical_css;
server {
        # PageSpeed's beacon dependent filters need the cache to let some requests
        # through to the backend.  This code below depends on the ngx_set_misc
        # module and randomly passes 5% of traffic to the backend for rebeaconing.
#           set $should_beacon_header_val "";
#           set_random $rand 0 100;
#           if ($rand ~* "^[01]$") {
#             set $should_beacon_header_val "abe02e86-1f0d-420a-80f4-0c4d4add2d94";
#             set $bypass_cache 1;
#           }
        listen 127.0.0.1:8080;
        root /var/www/html/mayxonghoispa;
        index index.php index.html index.htm index.php;
        server_name www.mayxonghoispa.vn mayxonghoispa.vn;
        if ($uri ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+") {
           set $bypass_cache "1";
        }
   location = /favicon.ico {
        log_not_found off;
        access_log off;
}
   location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
}
   # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
   location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
 }
location ~* /(?:uploads|files)/.*\.php$ {
           deny all;
           access_log off;
           log_not_found off;
}

error_page   500 502 503 504  /50x.html;
 location = /50x.html {
 root   html;
}
location / {
      root /var/www/html/mayxonghoispa;
      index index.php index.html index.htm;
      try_files $uri $uri/ $uri.html $uri.php /index.php?q=$uri&$args;
        }
location ~ ([^/]*)sitemap(.*)\.x(m|s)l$ {
        ## this redirects sitemap.xml to /sitemap_index.xml
         rewrite ^/sitemap\.xml$ /sitemap_index.xml permanent;
        ## this makes the XML sitemaps work
        rewrite ^/([a-z]+)?-?sitemap\.xsl$ /index.php?xsl=$1 last;
         rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
         rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
        ## The following lines are optional for the premium extensions
         ## News SEO
        rewrite ^/news-sitemap\.xml$ /index.php?sitemap=wpseo_news last;
         ## Local SEO
         rewrite ^/locations\.kml$ /index.php?sitemap=wpseo_local_kml last;
         rewrite ^/geo-sitemap\.xml$ /index.php?sitemap=wpseo_local last;
         ## Video SEO
         rewrite ^/video-sitemap\.xsl$ /index.php?xsl=video last;
         access_log off;
        }
    location ~ \.php$ {
                try_files $uri =404;
                include /etc/nginx/fastcgi_params;
                fastcgi_read_timeout 300;
                fastcgi_index index.php;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_intercept_errors on;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_pass unix:/run/php-fpm/www.sock;

       }
  location @nocache {
         add_header X-Cache-Engine "not cached";
         fastcgi_pass unix:/run/php-fpm/www.sock;
        }
  location ~ ^/slow-proxy {
      proxy_read_timeout 120; # <---
  }

#End
        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
         access_log        off;
         log_not_found     off;
         expires           365d;
    }
        location = /xmlrpc.php {
         deny all;
         access_log off;
         log_not_found off;
        }
    include /var/www/html/mayxonghoispa/nginx.conf;
